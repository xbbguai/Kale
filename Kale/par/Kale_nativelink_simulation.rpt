Info: Start Nativelink Simulation process
Info: NativeLink has detected Verilog design -- Verilog simulation models will be used

========= EDA Simulation Settings =====================

Sim Mode              :  RTL
Family                :  cycloneive
Quartus root          :  c:/altera/14.1/quartus/bin64/
Quartus sim root      :  c:/altera/14.1/quartus/eda/sim_lib
Simulation Tool       :  modelsim-altera
Simulation Language   :  verilog
Simulation Mode       :  GUI
Sim Output File       :  
Sim SDF file          :  
Sim dir               :  simulation\modelsim

=======================================================

Info: Starting NativeLink simulation with ModelSim-Altera software
Sourced NativeLink script c:/altera/14.1/quartus/common/tcl/internal/nativelink/modelsim.tcl
Error: Test Bench does not contain any stimulus files -- cannot continue NativeLink simulation
WINDOWS 2 ???????????
Error: NativeLink simulation flow was NOT successful



================The following additional information is provided to help identify the cause of error while running nativelink scripts=================
Nativelink TCL script failed with errorCode:  NONE
Nativelink TCL script failed with errorInfo:  unable to open key: ???????????
    while executing
"registry get "HKEY_LOCAL_MACHINE\\SOFTWARE\\Altera Corporation\\Quartus II\\$quartus_version" "Modelsim-Altera Install Directory" "
    invoked from within
"if [ catch {eval gen_msim_script args_hash} msim_do_file_name] {
	error "$::errorCode" "$::errorInfo"
    } elseif {$script_mode == 0} {
	post_message..."
    (procedure "launch_sim" line 109)
    invoked from within
"launch_sim launch_args_hash"
    ("eval" body line 1)
    invoked from within
"eval launch_sim launch_args_hash"
    invoked from within
"if [ info exists ::errorCode ] {
				set savedCode $::errorCode
				set savedInfo $::errorInfo
				error $result $savedInfo $savedCode
			} else {
			..."
    invoked from within
"if [catch {eval launch_sim launch_args_hash} result ] {
			set status 1
			if [ info exists ::errorCode ] {
				set savedCode $::errorCode
				set sav..."
    (procedure "run_sim" line 78)
    invoked from within
"run_sim run_sim_args_hash"
    invoked from within
"if [ info exists ::errorCode ] {
			set savedCode $::errorCode
			set savedInfo $::errorInfo
			error "$result" $savedInfo $savedCode
		} else {
			er..."
    (procedure "run_eda_simulation_tool" line 330)
    invoked from within
"run_eda_simulation_tool eda_opts_hash"
